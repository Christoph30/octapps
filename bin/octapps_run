#!/bin/bash

## Copyright (C) 2012 Karl Wette
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with with program; see the file COPYING. If not, write to the
## Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
## MA  02111-1307  USA

## Run Octave function from the command line.
## Command-line options may be given as:
##   --name <value>   or   --name=<value>

## Get function name, or print usage
function="$1"
if [ "x${function}" = "x" ]; then
    echo "usage: $0 <octave-function> <arguments...>" >&2
    exit 1
fi
shift

## Strip any extension from the function name
function=`expr "X${function}" : "X\([^.]*\).*"`

## If first command-line argment is --help, print function help
if [ "x$1" = "x--help" ]; then
    exec octave -qfH --eval "help ${function}"
fi

## Execute Octave, using --eval to invoke the Octave function, and
## using parseCommandLine() to parse the command-line arguments.
## The "/dev/null" marks the start of the arguments passed to the
## Octave function, and prevents Octave from trying to read a file
## after evaluating the --eval code.
exec octave -qfH --eval "${function}(parseCommandLine(\"/dev/null\"){:});" /dev/null "$@"
