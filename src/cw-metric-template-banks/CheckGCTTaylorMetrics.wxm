/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 13.04.2 ] */

/* [wxMaxima: title   start ]
Preliminaries
   [wxMaxima: title   end   ] */

/* [wxMaxima: input   start ] */
declare("αβγδεζηθικλμνξπρστυφχψωΓΔΘΛΞΠΣΦχΨΩ", alphabetic)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
assume(T > 0, Ω > 0)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: title   start ]
Phase model of Pletsch, PRD 82 042002 (2010)
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]
Equations (42) and (78)
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
νlist : [ν, νd, νdd]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Φ : sum( νlist[k+1] * ( 2*(t-t0)/T )^(k+1), k, 0, length(νlist)-1 ) + nx * cos(Ω*t) + ny * sin(Ω*t);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: title   start ]
Coherent metric of Pletsch, PRD 82 042002 (2010)
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]
Coherent phase metric
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(time_average)$
time_average(x) := (1/T)*integrate(x, t, tj-T/2, tj+T/2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(phase_metric)$
phase_metric(Φ, x, y) := block([dx,dy],
    dx : diff(Φ, x),
    dy : diff(Φ, y),
    time_average(dx * dy) - time_average(dx) * time_average(dy)
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Check coherent metric elements of Pletsch, PRD 82 042002 (2010)
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
φ : Ω*T/2$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(j0, j1, j2, j3)$
j0(x) := spherical_bessel_j(0, x)$
j1(x) := spherical_bessel_j(1, x)$
j2(x) := spherical_bessel_j(2, x)$
j3(x) := spherical_bessel_j(3, x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(compare_element)$
compare_element(Φ, x, y, gref) := block([g,g1,g2],
    g : ev(phase_metric(Φ, x, y), ratsimp, simp),
    g1 : trigrat(expand(g)),
    g2 : trigrat(expand(gref)),
    if is(is(equal(g1, g2)) = true) then
       true
    else
       [false, g1, g2]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Equations (50)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, ν, 1/3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, νd, 4/3*(tj - t0)/T);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, νd, 4/45 + 16/3*((tj - t0)/T)^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, nx, -j1(φ)*sin(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, ny, j1(φ)*cos(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, nx, -2/3*j2(φ)*cos(Ω*tj) - 4*j1(φ)*((tj - t0)/T)*sin(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, ny, -2/3*j2(φ)*sin(Ω*tj) + 4*j1(φ)*((tj - t0)/T)*cos(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, nx, nx, 1/2 - 1/2*j0(φ)*cos(φ) - j1(φ)*sin(φ)*cos(Ω*tj)^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, nx, ny, -j1(φ)*sin(φ)*sin(Ω*tj)*cos(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ny, ny, 1/2 - 1/2*j0(φ)*cos(φ) - j1(φ)*sin(φ)*sin(Ω*tj)^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Equations (80)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, νdd, 1/5 + 4*((tj - t0)/T)^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, νdd, 4/3*((tj - t0)/T) + 16*((tj - t0)/T)^3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νdd, νdd, 1/7 + 8*((tj - t0)/T)^2 + 48*((tj - t0)/T)^4);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νdd, nx, (-3/5*j1(φ) + 2/5*j3(φ))*sin(Ω*tj) - 4*j2(φ)*((tj - t0)/T)*cos(Ω*tj)
                            - 12*j1(φ)*((tj - t0)/T)^2*sin(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νdd, ny, (3/5*j1(φ) - 2/5*j3(φ))*cos(Ω*tj) - 4*j2(φ)*((tj - t0)/T)*sin(Ω*tj)
                            + 12*j1(φ)*((tj - t0)/T)^2*cos(Ω*tj));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Compute numerical coherent metrics for comparison with Octave
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(phase_metric_matrix)$
phase_metric_matrix(Φ, xx, [sublist]) := apply(matrix,
    outermap(
        lambda([x, y],
            subst(sublist, phase_metric(Φ, x, y))
        ),
        xx, xx
    )
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phase_metric_matrix(Φ, [ν, νd, νdd, nx, ny], t0=0, tj=-1/2, Ω=2*π, T=1)$
%, numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phase_metric_matrix(Φ, [ν, νd, νdd, nx, ny], t0=0, tj=0, Ω=2*π, T=1)$
%, numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phase_metric_matrix(Φ, [ν, νd, νdd, nx, ny], t0=1/2, tj=1/3, Ω=2*π, T=2.5)$
%, numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: title   start ]
Semicoherent phase model of Pletsch, PRD 82 042002 (2010)
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]
Semicoherent phase metric
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(seg_times)$
seg_times : [t1, t2, t3, t4, t5]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(seg_sum)$
seg_sum(x, tj) := lsum(ev(x), tj, seg_times) / length(seg_times)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(time_average)$
time_average(x, tj) := (1/T)*integrate(x, t, tj-T/2, tj+T/2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(phase_metric)$
phase_metric(Φ, x, y) := block([dx,dy],
    dx : diff(Φ, x),
    dy : diff(Φ, y),
    seg_sum(time_average(dx * dy, tj) - time_average(dx, tj) * time_average(dy, tj), tj)
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Check semicoherent metric elements of Pletsch, PRD 82 042002 (2010)
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
φ : Ω*T/2$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(μ1, μ2, μ0SIN, μ1SIN, μ0COS, μ1COS, ξ2SIN, ξ2COS, ξ1SINCOS)$
μ1 : seg_sum(((tj-t0)/T)^1, tj)$
μ2 : seg_sum(((tj-t0)/T)^2, tj)$
μ3 : seg_sum(((tj-t0)/T)^3, tj)$
μ4 : seg_sum(((tj-t0)/T)^4, tj)$
μ0SIN : seg_sum(((tj-t0)/T)^0 * sin(Ω*tj), tj)$
μ1SIN : seg_sum(((tj-t0)/T)^1 * sin(Ω*tj), tj)$
μ2SIN : seg_sum(((tj-t0)/T)^2 * sin(Ω*tj), tj)$
μ0COS : seg_sum(((tj-t0)/T)^0 * cos(Ω*tj), tj)$
μ1COS : seg_sum(((tj-t0)/T)^1 * cos(Ω*tj), tj)$
μ2COS : seg_sum(((tj-t0)/T)^2 * cos(Ω*tj), tj)$
ξ2SIN : seg_sum(sin(Ω*tj)^2, tj)$
ξ2COS : seg_sum(cos(Ω*tj)^2, tj)$
ξ1SINCOS : seg_sum(sin(Ω*tj)*cos(Ω*tj), tj)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(j0, j1, j2, j3)$
j0(x) := spherical_bessel_j(0, x)$
j1(x) := spherical_bessel_j(1, x)$
j2(x) := spherical_bessel_j(2, x)$
j3(x) := spherical_bessel_j(3, x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(compare_element)$
compare_element(Φ, x, y, gref) := block([g,g1,g2],
    g : ev(phase_metric(Φ, x, y), ratsimp, simp),
    g1 : trigrat(expand(g)),
    g2 : trigrat(expand(gref)),
    if is(is(equal(g1, g2)) = true) then
       true
    else
       [false, g1, g2]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Equations (59)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, ν, 1/3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, νd, 4/3*μ1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, νd, 4/45 + 16/3*μ2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, nx, -j1(φ)*μ0SIN);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, ny, j1(φ)*μ0COS);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, nx, -2/3*j2(φ)*μ0COS - 4*j1(φ)*μ1SIN);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, ny, -2/3*j2(φ)*μ0SIN + 4*j1(φ)*μ1COS);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, nx, nx, 1/2 - 1/2*j0(φ)*cos(φ) - j1(φ)*sin(φ)*ξ2COS);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, nx, ny, -j1(φ)*sin(φ)*ξ1SINCOS);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ny, ny, 1/2 - 1/2*j0(φ)*cos(φ) - j1(φ)*sin(φ)*ξ2SIN);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Equations (85)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, ν, νdd, 1/5 + 4*μ2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νd, νdd, 4/3*μ1 + 16*μ3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νdd, νdd, 1/7 + 8*μ2 + 48*μ4);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νdd, nx, (-3/5*j1(φ) + 2/5*j3(φ))*μ0SIN - 4*j2(φ)*μ1COS - 12*j1(φ)*μ2SIN);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
compare_element(Φ, νdd, ny, (3/5*j1(φ) - 2/5*j3(φ))*μ0COS - 4*j2(φ)*μ1SIN + 12*j1(φ)*μ2COS);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Compute numerical semicoherent metrics for comparison with Octave
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(phase_metric_matrix)$
phase_metric_matrix(Φ, xx, [sublist]) := apply(matrix,
    outermap(
        lambda([x, y],
            subst(sublist, phase_metric(Φ, x, y))
        ),
        xx, xx
    )
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phase_metric_matrix(Φ, [ν, νd, νdd, nx, ny], t0=0, t1=-2, t2=-1, t3=0, t4=1, t5=2, Ω=2*π, T=1)$
%, numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phase_metric_matrix(Φ, [ν, νd, νdd, nx, ny], t0=0, t1=-4, t2=-2, t3=0, t4=2, t5=4, Ω=2*π, T=1)$
%, numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phase_metric_matrix(Φ, [ν, νd, νdd, nx, ny], t0=-1, t1=-10, t2=-6, t3=5, t4=2, t5=9, Ω=2*π, T=2.5)$
%, numer;
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
